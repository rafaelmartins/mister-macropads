name: main

on:
  push:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: main
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: mister-macropads
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
            go-version-file: mister-macropads/go.mod
            cache-dependency-path: mister-macropads/go.sum

      - name: Build binaries
        id: build
        run: |
          BINARIES=($(pushd ./mister-macropads/cmd > /dev/null; for i in *; do echo $i; done; popd > /dev/null))
          go build -C ./mister-macropads/ -o ../test "./cmd/${BINARIES}/"
          VERSION="$(./test -v | sed s/^v//)"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

          for binary in "${BINARIES[@]}"; do
            GOOS=linux GOARCH=arm go build -C ./mister-macropads/ -o "../root/${binary}/Scripts/${binary}_on.sh" "./cmd/${binary}/"
            pushd "root/${binary}" > /dev/null
            zip -r9 "../../mister-${binary}-${VERSION}.zip" *
            popd > /dev/null
          done

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            mister-*.zip

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Get release metadata
        id: meta
        run: |
          version="$(echo "${{ github.ref }}" | sed 's,refs/tags/v,,')"
          echo "name=$(git tag -l --format="%(contents:subject)" "v${version}")" >> $GITHUB_OUTPUT
          git tag -l --format="%(contents:body)" "v${version}" > body.md

      - uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        with:
          name: ${{ steps.meta.outputs.name }}
          artifacts: dist/mister-*
          bodyFile: body.md
          generateReleaseNotes: true
